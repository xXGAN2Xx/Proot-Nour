name: Build and Package
on: [pull_request, push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v3
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Compile Kotlin Wrapper and Rename JAR
        run: |
          cd wrappers/Kotlin
          chmod +x gradlew
          ./gradlew shadowJar

          # Define expected original artifact name
          ORIGINAL_JAR="build/libs/PteroVM-1.0.0-all.jar"
          RENAMED_JAR="server.jar"

          # Check if the original artifact exists
          if [ -f "$ORIGINAL_JAR" ]; then
            echo "Moving $ORIGINAL_JAR to current directory..."
            mv "$ORIGINAL_JAR" .
            # Get the base name of the original JAR after moving
            MOVED_JAR_BASENAME=$(basename "$ORIGINAL_JAR")
            echo "Renaming $MOVED_JAR_BASENAME to $RENAMED_JAR..."
            mv "$MOVED_JAR_BASENAME" "$RENAMED_JAR" # Rename the file here
            echo "JAR successfully renamed to $RENAMED_JAR"
          else
            echo "Error: Expected artifact $ORIGINAL_JAR not found after build!"
            # List contents for debugging
            echo "Contents of build/libs/:"
            ls -l build/libs/
            exit 1
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: |
            wrappers/Javascript/PteroVM.js
            wrappers/Python/PteroVM.py
            wrappers/Kotlin/server.jar
            PteroVM.sh
