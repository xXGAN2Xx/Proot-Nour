name: Build and upload server.jar

on:
  push:
    paths:
      - 'wrappers/**'
  pull_request:
    paths:
      - 'wrappers/**'
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  build:
    name: Compile Kotlin and upload server.jar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show wrappers folder contents
        run: |
          echo "PWD: $(pwd)"
          echo "== wrappers listing =="
          ls -la wrappers || true
          echo "======================"

      - name: Set up JDK (required for Kotlin/Gradle)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Build (Gradle if present, else Kotlin via SDKMAN)
        id: build_step
        shell: bash
        run: |
          # NOTE: do NOT use `set -u` here because SDKMAN's init may read unset vars.
          set -eo pipefail

          list_jars() {
            echo "=== Jar files found ==="
            find . -type f -name "*.jar" -print || true
            echo "=== end jars ==="
          }

          if [ -x "./gradlew" ]; then
            echo "Detected ./gradlew -> using Gradle to build"
            chmod +x ./gradlew
            ./gradlew clean assemble || ./gradlew clean build
            list_jars
            exit 0
          fi

          echo "No gradlew -> installing Kotlin via SDKMAN (latest stable)"
          # Install SDKMAN non-interactively
          curl -sS https://get.sdkman.io | bash

          # Source SDKMAN in this shell so `sdk` and `kotlinc` become available.
          SDKMAN_DIR="$HOME/.sdkman"
          if [ -f "$SDKMAN_DIR/bin/sdkman-init.sh" ]; then
            # source the init script in this shell session
            # avoid 'set -u' style errors by not using nounset
            source "$SDKMAN_DIR/bin/sdkman-init.sh"
          else
            echo "ERROR: sdkman-init.sh not found at $SDKMAN_DIR/bin/sdkman-init.sh"
            ls -la "$SDKMAN_DIR" || true
            exit 1
          fi

          # Install the latest Kotlin candidate (ignores error if already installed)
          sdk install kotlin || true

          # Verify kotlinc is available
          if ! command -v kotlinc >/dev/null 2>&1; then
            echo "kotlinc not found in PATH after SDKMAN install. Listing SDKMAN dir for debugging:"
            ls -la "$SDKMAN_DIR" || true
            exit 1
          fi

          # find Kotlin source files under wrappers
          KT_FILES=$(find wrappers -type f -name "*.kt" -print | tr '\n' ' ' || true)
          if [ -z "$KT_FILES" ]; then
            echo "No .kt files found under wrappers/ - nothing to compile"
            exit 1
          fi

          echo "Compiling Kotlin files: $KT_FILES"
          mkdir -p build
          kotlinc $KT_FILES -include-runtime -d build/server.jar

          if [ -f build/server.jar ]; then
            echo "Produced build/server.jar"
          else
            echo "build/server.jar not found after kotlinc; listing jars to help debug"
          fi

          list_jars

      - name: Confirm JAR presence (debug)
        run: |
          echo "Searching for server.jar and other jars:"
          find . -type f \( -name "server.jar" -o -path "*/build/libs/*.jar" -o -name "*.jar" \) -print || true

      - name: Upload server-jar artifact (globs)
        uses: actions/upload-artifact@v4
        with:
          name: server-jar
          path: |
            build/server.jar
            **/build/libs/*.jar
            **/server.jar
            **/*.jar
          retention-days: 7
