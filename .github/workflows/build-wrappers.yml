name: Build and commit server.jar

on:
  push:
    paths:
      - 'wrappers/**'
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Build (Gradle or Kotlin)
        shell: bash
        run: |
          set -eo pipefail

          if [ -x "./gradlew" ]; then
            chmod +x ./gradlew
            ./gradlew clean build || ./gradlew clean assemble
            JAR_PATH=$(find . -type f -name "*.jar" | head -n 1)
          else
            curl -sS https://get.sdkman.io | bash
            source "$HOME/.sdkman/bin/sdkman-init.sh"
            sdk install kotlin
            mkdir -p build
            KT_FILES=$(find wrappers -type f -name "*.kt" -print | tr '\n' ' ')
            kotlinc $KT_FILES -include-runtime -d build/server.jar
            JAR_PATH="build/server.jar"
          fi

          if [ ! -f "$JAR_PATH" ]; then
            echo "ERROR: No jar built."
            exit 1
          fi

          mkdir -p src
          cp "$JAR_PATH" wrappers/Kotlin/server.jar
          echo "server.jar copied to wrappers/Kotlin/server.jar"

      - name: Commit and push wrappers/Kotlin/server.jar
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add wrappers/Kotlin/server.jar
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update wrappers/Kotlin/server.jar from CI"
            git push origin HEAD:${GITHUB_REF_NAME}
          fi
