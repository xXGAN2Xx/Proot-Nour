name: Build and commit server.jar

on:
  push:
    paths:
      - 'wrappers/Kotlin/**'
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up JDK (Temurin, latest patch for chosen major)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          check-latest: true

      - name: Build server.jar
        shell: bash
        run: |
          set -eo pipefail

          mkdir -p build
          BUILT_SERVER=false

          ensure_kotlinc() {
            if ! command -v kotlinc >/dev/null 2>&1; then
              echo "kotlinc not found â€” installing kotlin via sdkman..."
              curl -sS https://get.sdkman.io | bash
              source "$HOME/.sdkman/bin/sdkman-init.sh"
              sdk install kotlin
            fi
          }

          if [ -f "wrappers/Kotlin/main.kt" ]; then
            ensure_kotlinc
            echo "Compiling wrappers/Kotlin/main.kt -> build/server.jar"
            kotlinc wrappers/Kotlin/main.kt -include-runtime -d build/server.jar
            if [ -f build/server.jar ]; then
              BUILT_SERVER=true
            fi
          fi

          if [ "$BUILT_SERVER" = false ] && [ -x "./gradlew" ]; then
            echo "No explicit main compilation done. Running ./gradlew clean build (or assemble)."
            chmod +x ./gradlew
            ./gradlew clean build || ./gradlew clean assemble || true
            JAR_FOUND=$(find . -type f -name "*.jar" ! -path "*/.gradle/*" ! -path "./build/*/tmp/*" | head -n 1 || true)
            if [ -n "$JAR_FOUND" ];
            then
              mkdir -p build
              cp "$JAR_FOUND" build/server.jar
              BUILT_SERVER=true
            fi
          fi

          if [ "$BUILT_SERVER" = false ]; then
            echo "Falling back to compiling all Kotlin files into build/server.jar"
            ensure_kotlinc
            KT_FILES=$(find wrappers -type f -name "*.kt" -print | tr '\n' ' ' || true)
            if [ -n "$KT_FILES" ]; then
              kotlinc $KT_FILES -include-runtime -d build/server.jar
              if [ -f build/server.jar ]; then
                BUILT_SERVER=true
              fi
            fi
          fi

          if [ "$BUILT_SERVER" = false ]; then
            echo "ERROR: No server.jar was built."
            exit 1
          fi

          if [ "$BUILT_SERVER" = true ]; then
            cp -f build/server.jar ./server.jar
            echo "server.jar copied to the root directory"
          fi

      - name: Commit and push built jar
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          if [ -f server.jar ]; then
            git add server.jar
          fi

          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update server.jar from CI"
            git push origin HEAD:${GITHUB_REF_NAME}
          fi
